#!/system/bin/sh
# Gov-Tuner, version 2.0.6
# Copyright (C) 2016 Debuffer @ XDA Developers
# With help from Paget96 and F4uzan
#=======================================================================#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
#=======================================================================#

# Upgrade tool, this removes Governor_profiles in case it exists
# We need to remove it since it directly conflicts with the new version (since the name differs)
if [ -f /system/etc/init.d/Governor_profiles ]; then
	$busybox mount -o remount, rw /system
	$busybox rm -rf /system/etc/init.d/Governor_profiles
	$busybox mount -o remount, ro /system
fi
if [ -f /system/etc/init.d/Governor_Tuner ]; then
	$busybox mount -o remount, rw /system
	$busybox rm -rf /system/etc/init.d/Governor_Tuner
	$busybox mount -o remount, ro /system
fi

# Minimum CPU frequency
MIN_CPU_FREQ=$($busybox cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq);

# Maximum CPU frequency
MAX_CPU_FREQ=$($busybox cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq);

# Currently used governor
CUR_GOVERNOR=$($busybox cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor);

# Detects whether user uses a dual-cluster CPU (SD810, SD820, etc) or not
CLUSTER_DETECT="/sys/devices/system/cpu/cpu0/cpufreq/$CUR_GOVERNOR"

# Dual cluster, selects only first two or four cores
CPUFREQ_CLUSTER="/sys/devices/system/cpu/cpu0/cpufreq"

# Regular CPUFreq directory
CPUFREQ_REGULAR="/sys/devices/system/cpu/cpufreq"

# Finalize the detection of dual-cluster here
if [ -d "$CLUSTER_DETECT" ]; then
	CLUSTER=$CPUFREQ_CLUSTER
 	else
	CLUSTER=$CPUFREQ_REGULAR
fi

# Set the finalized governor path
GOVERNOR=$CLUSTER/$CUR_GOVERNOR

# GOVERNOR TWEAKS #

# INTERACTIVE

if [ "$CUR_GOVERNOR" = "interactive" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "30000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$GOVERNOR/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then	
		$busybox echo "0" > "$GOVERNOR/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "0" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "120000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:25 1100000:70 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "15000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "45000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "60" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# CONSERVATIVE

if [ $CUR_GOVERNOR = "conservative" ]; then
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "40" > "$GOVERNOR/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "25" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "45000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "60" > "$GOVERNOR/up_threshold";
	fi
		$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# YANKACTIVE

if [ $CUR_GOVERNOR = "yankactive" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "30000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$GOVERNOR/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then	
		$busybox echo "0" > "$GOVERNOR/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "0" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "120000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:25 1100000:70 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "15000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "45000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "60" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi


# INTELLIACTIVE

if [ $CUR_GOVERNOR = "intelliactive" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "30000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$GOVERNOR/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "0" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "75000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:20 1100000:70 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "15000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "45000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1700000,1700000,1700000,1700000" > "$GOVERNOR/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1400000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "60" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi


# BIOSHOCK 

if [ $CUR_GOVERNOR = "bioshock" ]; then
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "40" > "$GOVERNOR/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "25" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "45000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "60" > "$GOVERNOR/up_threshold";
	fi
		$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# LIONFISH 

if [ $CUR_GOVERNOR = "lionfish" ]; then
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "40" > "$GOVERNOR/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "25" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/jump_level" ]; then
		$busybox echo "1000000" > "$GOVERNOR/jump_level";
	fi
	if [ -e "$GOVERNOR/jump_threshold" ]; then
		$busybox echo "60" > "$GOVERNOR/jump_threshold";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "45000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "60" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# IMPULSE 

if [ $CUR_GOVERNOR = "impulse" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "50000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1200000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "40000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "50000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "200000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:35 1100000:90 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/max_freq_hysteresis" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/max_freq_hysteresis";
	fi
	if [ -e "$GOVERNOR/align_windows" ]; then
		$busybox echo "0" > "$GOVERNOR/align_windows";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# UBERDEMAND 

if [ $CUR_GOVERNOR = "uberdemand" ]; then
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "20" > "$GOVERNOR/down_differential";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/second_phase_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/second_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# ELECTROACTIVE 

if [ $CUR_GOVERNOR = "electroactive" ]; then
	if [ -e "$GOVERNOR/boostfreq" ]; then
		$busybox echo "0" > "$GOVERNOR/boostfreq";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse";
	fi
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "15" > "$GOVERNOR/down_differential";
	fi
	if [ -e "$GOVERNOR/freq_responsiveness" ]; then
		$busybox echo "1200000" > "$GOVERNOR/freq_responsiveness";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "30" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/micro_freq_up_threshold" ]; then
		$busybox echo "90" > "$GOVERNOR/micro_freq_up_threshold";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "90" > "$GOVERNOR/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_min_freq" ]; then
		$busybox echo "600000" > "$GOVERNOR/up_threshold_min_freq";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# INTELLIMM

if [ $CUR_GOVERNOR = "intellimm" ]; then
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "15" > "$GOVERNOR/down_differential";
	fi
	if [ -e "$GOVERNOR/down_differential_multi_core" ]; then
		$busybox echo "15" > "$GOVERNOR/down_differential_multi_core";
	fi
	if [ -e "$GOVERNOR/freq_down_step" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/freq_down_step";
	fi
	if [ -e "$GOVERNOR/freq_down_step_barrier" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/freq_down_step_barrier";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/input_event_min_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ, $MIN_CPU_FREQ, $MIN_CPU_FREQ, $MIN_CPU_FREQ" > "$GOVERNOR/input_event_min_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/optimal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/optimal_freq";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/shortcut" ]; then
		$busybox echo "0" > "$GOVERNOR/shortcut";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1500000,1500000,1500000,1500000" > "$GOVERNOR/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1500000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_multi_core" ]; then
		$busybox echo "0" > "$GOVERNOR/up_threshold_multi_core";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# BARRY_ALLEN

if [ $CUR_GOVERNOR = "barry_allen" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "50000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/ba_lock" ]; then
		$busybox echo "0" > "$GOVERNOR/ba_lock";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$GOVERNOR/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1200000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "40000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1100000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:35 1100000:90 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "50000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "200000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1500000,1500000,1500000,1500000" > "$GOVERNOR/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1500000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# BLUACTIVE

if [ $CUR_GOVERNOR = "bluactive" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "50000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$GOVERNOR/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1200000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "40000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1100000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:35 1100000:90 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "50000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "200000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1500000,1500000,1500000,1500000" > "$GOVERNOR/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1500000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# DANCEDANCE

if [ $CUR_GOVERNOR = "dancedance" ]; then
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "1" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "99" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# LIONHEART 

if [ $CUR_GOVERNOR = "lionheart" ]; then
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "1" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "99" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# PEGASUSQ

if [ $CUR_GOVERNOR = "pegasusq" ]; then
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "15" > "$GOVERNOR/down_differential";
	fi
	if [ -e "$GOVERNOR/freq_responsiveness" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/freq_responsiveness";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "30" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_min_freq" ]; then
		$busybox echo "600000" > "$GOVERNOR/up_threshold_min_freq";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# ONDEMAND

if [ $CUR_GOVERNOR = "ondemand" ]; then
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "15" > "$GOVERNOR/down_differential";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/optimal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/optimal_freq";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1100000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	if [ -e "$GOVERNOR/up_threshold_multi_core" ]; then
		$busybox echo "0" > "$GOVERNOR/up_threshold_multi_core";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# SMARTMAX 

if [ $CUR_GOVERNOR = "smartmax" ]; then
	if [ -e "$GOVERNOR/awake_ideal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/awake_ideal_freq";
	fi
	if [ -e "$GOVERNOR/boost_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/boost_duration";
	fi
	if [ -e "$GOVERNOR/boost_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/boost_freq";
	fi
	if [ -e "$GOVERNOR/debug_mask" ]; then
		$busybox echo "32" > "$GOVERNOR/debug_mask";
	fi
	if [ -e "$GOVERNOR/down_rate" ]; then
		$busybox echo "10000" > "$GOVERNOR/down_rate";
	fi
	if [ -e "$GOVERNOR/ignore_nice" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice";
	fi
	if [ -e "$GOVERNOR/input_boost_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/input_boost_duration";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/max_cpu_load" ]; then
		$busybox echo "100" > "$GOVERNOR/max_cpu_load";
	fi
	if [ -e "$GOVERNOR/min_cpu_load" ]; then
		$busybox echo "5" > "$GOVERNOR/min_cpu_load";
	fi
	if [ -e "$GOVERNOR/min_sampling_rate" ]; then
		$busybox echo "20000" > "$GOVERNOR/min_sampling_rate";
	fi
	if [ -e "$GOVERNOR/ramp_down_step" ]; then
		$busybox echo "162000" > "$GOVERNOR/ramp_down_step";
	fi
	if [ -e "$GOVERNOR/ramp_up_during_boost" ]; then
		$busybox echo "0" > "$GOVERNOR/ramp_up_during_boost";
	fi
	if [ -e "$GOVERNOR/ramp_up_step" ]; then
		$busybox echo "100000" > "$GOVERNOR/ramp_up_step";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/suspend_ideal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/suspend_ideal_freq";
	fi
	if [ -e "$GOVERNOR/touch_poke_freq" ]; then
		$busybox echo "0" > "$GOVERNOR/touch_poke_freq";
	fi
	if [ -e "$GOVERNOR/up_rate" ]; then
		$busybox echo "0" > "$GOVERNOR/up_rate";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# OPTIMAX

if [ $CUR_GOVERNOR = "optimax" ]; then
	if [ -e "$GOVERNOR/optimal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/optimal_freq";
	fi
	if [ -e "$GOVERNOR/optimal_max_freq" ]; then
		$busybox echo "0" > "$GOVERNOR/optimal_max_freq";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1100000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	if [ -e "$GOVERNOR/up_threshold_multi_core" ]; then
		$busybox echo "0" > "$GOVERNOR/up_threshold_multi_core";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# CONSERVATIVEX

if [ $CUR_GOVERNOR = "conservativex" ]; then
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "1" > "$GOVERNOR/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "99" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# INTERACTIVE_PRO

if [ $CUR_GOVERNOR = "interactive_pro" ]; then
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "50000" > "$GOVERNOR/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$GOVERNOR/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/freq_calc_thresh" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/freq_calc_thresh";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1200000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "40000" > "$GOVERNOR/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1100000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
		$busybox echo "1 $MIN_CPU_FREQ:35 1100000:90 1750000:90" > "$GOVERNOR/target_loads";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "50000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "200000" > "$GOVERNOR/timer_slack";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "1500000" > "$GOVERNOR/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# WHEATLEY

if [ $CUR_GOVERNOR = "wheatley" ]; then
	if [ -e "$GOVERNOR/allowed_misses" ]; then
		$busybox echo "5" > "$GOVERNOR/allowed_misses";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/target_residency" ]; then
		$busybox echo "10000" > "$GOVERNOR/target_residency";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# ONDEMAND PLUS

if [ $CUR_GOVERNOR = "ondemandplus" ]; then
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "20" > "$GOVERNOR/down_differential";
	fi
	if [ -e "$GOVERNOR/inter_hifreq" ]; then
		$busybox echo "1500000" > "$GOVERNOR/inter_hifreq";
	fi
	if [ -e "$GOVERNOR/inter_lofreq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/inter_lofreq";
	fi
	if [ -e "$GOVERNOR/inter_staycycles" ]; then
		$busybox echo "2" > "$GOVERNOR/inter_staycycles";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/staycycles_resetfreq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/staycycles_resetfreq";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "50000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# SMARTMAX EPS

if [ $CUR_GOVERNOR = "smartmax_eps" ]; then
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$GOVERNOR/io_is_busy";
	fi
	if [ -e "$GOVERNOR/max_cpu_load" ]; then
		$busybox echo "100" > "$GOVERNOR/max_cpu_load";
	fi
	if [ -e "$GOVERNOR/min_cpu_load" ]; then
		$busybox echo "20" > "$GOVERNOR/min_cpu_load";
	fi
	if [ -e "$GOVERNOR/min_sampling_rate" ]; then
		$busybox echo "20000" > "$GOVERNOR/min_sampling_rate";
	fi
	if [ -e "$GOVERNOR/ramp_down_step" ]; then
		$busybox echo "700000" > "$GOVERNOR/ramp_down_step";
	fi
	if [ -e "$GOVERNOR/ramp_up_during_boost" ]; then
		$busybox echo "0" > "$GOVERNOR/ramp_up_during_boost";
	fi
	if [ -e "$GOVERNOR/ramp_up_step" ]; then
		$busybox echo "0" > "$GOVERNOR/ramp_up_step";
	fi
	if [ -e "$GOVERNOR/awake_ideal_freq" ]; then
		$busybox echo "600000" > "$GOVERNOR/awake_ideal_freq";
	fi
	if [ -e "$GOVERNOR/boost_duration" ]; then
		$busybox echo "0" > "$GOVERNOR/boost_duration";
	fi
	if [ -e "$GOVERNOR/boost_freq" ]; then
		$busybox echo "0" > "$GOVERNOR/boost_freq";
	fi
	if [ -e "$GOVERNOR/debug_mask" ]; then
		$busybox echo "0" > "$GOVERNOR/debug_mask";
	fi
	if [ -e "$GOVERNOR/down_rate" ]; then
		$busybox echo "30000" > "$GOVERNOR/down_rate";
	fi
	if [ -e "$GOVERNOR/ignore_nice" ]; then
		$busybox echo "0" > "$GOVERNOR/ignore_nice";
	fi
	if [ -e "$GOVERNOR/"input_boost_duration ]; then
		$busybox echo "0" > "$GOVERNOR/input_boost_duration";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# INTELLIDEMAND

if [ $CUR_GOVERNOR = "intellidemand" ]; then
	if [ -e "$GOVERNOR/optimal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$GOVERNOR/optimal_freq";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$GOVERNOR/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$GOVERNOR/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_easy_factor" ]; then
		$busybox echo "2" > "$GOVERNOR/sampling_easy_factor";
	fi
	if [ -e "$GOVERNOR/sampling_interim_factor" ]; then
		$busybox echo "3" > "$GOVERNOR/sampling_interim_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$GOVERNOR/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$GOVERNOR/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "1100000" > "$GOVERNOR/sync_freq";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1500000,1500000,1500000,1500000" > "$GOVERNOR/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/ui_sampling_rate" ]; then
		$busybox echo "40000" > "$GOVERNOR/ui_sampling_rate";
	fi
	if [ -e "$GOVERNOR/ui_timeout" ]; then
		$busybox echo "40" > "$GOVERNOR/ui_timeout";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "95" > "$GOVERNOR/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$GOVERNOR/up_threshold_any_cpu_load";
	fi
	if [ -e "$GOVERNOR/up_threshold_multi_core" ]; then
		$busybox echo "0" > "$GOVERNOR/up_threshold_multi_core";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# TRIPNDROID

if [ $CUR_GOVERNOR = "tripndroid" ]; then
	if [ -e "$GOVERNOR/down_sample_time" ]; then
		$busybox echo "10000" > "$GOVERNOR/down_sample_time";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "90" > "$GOVERNOR/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "1200000" > "$GOVERNOR/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "50000" > "$GOVERNOR/timer_rate";
	fi
	if [ -e "$GOVERNOR/up_sample_time" ]; then
		$busybox echo "50000" > "$GOVERNOR/up_sample_time";
	fi
	$busybox echo "$CUR_GOVERNOR tweaks applied."
	exit
fi

# No compatible governor is detected
# Put other governor above this, don't let this be sandwiched by other governor
$busybox echo "$CUR_GOVERNOR governor is not supported yet."
$busybox echo  "You can request the support for this governor"
$busybox echo "        in the official XDA thread."
