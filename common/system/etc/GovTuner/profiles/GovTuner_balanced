#!/system/bin/sh
# Gov-Tuner Balanced Profile
# Copyright (C) 2016 Debuffer and Senthil360 @ XDA Developers
#      With help from Paget96 and F4uzan and GreekDragon
#=======================================================================#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
#=======================================================================#

# TODO: Fix this on Cluster-based SoC

busybox="/system/etc/GovTuner/busybox"
CUR_GOVERNOR=$($busybox cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor);
PROFILE="/system/etc/GovTuner/current/profile"
FIRST_RUN="/data/system/first_run"
CHECK1=$($busybox cat /data/system/first_run);
REG_DIR="/sys/devices/system/cpu/cpufreq"
CLU_DIR="/sys/devices/system/cpu/cpu0/cpufreq"
# Minimum CPU frequency
MIN_CPU_FREQ=$($busybox cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq);

# Maximum CPU frequency
MAX_CPU_FREQ=$($busybox cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq);

$busybox mount -o remount,rw /system 2>/dev/null
mount -o remount,rw /system 2>/dev/null

if [ "$CHECK1" -eq "1" ]; then
   echo "First Run"
else
   OUTPUT_ID=$($busybox cat /data/system/test);
   echo "Resetting GovTuner"
   echo "Applying new profile"
   echo 0 > $FIRST_RUN
   kill -9 $OUTPUT_ID
fi

# GOVERNOR TUNABLES FOR NON-CLUSTER DEVICES

while [ 5 == 5 ]; do
$busybox mount -o remount,rw /system 2>/dev/null
mount -o remount,rw /system 2>/dev/null
 OUTPUT="/data/system/test"
 echo $$ > $OUTPUT
 echo "GovTuner_balanced" > $PROFILE
 
#For REGULAR and SMALL clusters
 if [ -d "/sys/devices/system/cpu/cpufreq/$CUR_GOVERNOR" ]; then
     FINAL_PATH=$REG_DIR
 elif [ -d "/sys/devices/system/cpu/cpu0/cpufreq/$CUR_GOVERNOR" ]; then
     FINAL_PATH=$CLU_DIR
 else
     echo "Unsupported device architecture"
 fi
 GOVERNOR="$FINAL_PATH/$CUR_GOVERNOR"

 

 # INTERACTIVE
 
 if [ -d "$GOVERNOR" ]; then
 if [ "$CUR_GOVERNOR" = "interactive" ]; then
 for i in $FINAL_PATH/interactive; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$i/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$i/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then	
		$busybox echo "0" > "$i/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/max_freq_hysteresis" ]; then
		$busybox echo "0" > "$i/max_freq_hysteresis";
	fi
	if [ -e "$GOVERNOR/align_windows" ]; then
		$busybox echo "0" > "$i/align_windows";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# CONSERVATIVE
 elif [ $CUR_GOVERNOR = "conservative" ]; then
 for i in $FINAL_PATH/conservative; do
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "80" > "$i/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "75000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# YANKACTIVE

 elif [ $CUR_GOVERNOR = "yankactive" ]; then
 for i in $FINAL_PATH/yankactive; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$i/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$i/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then	
		$busybox echo "0" > "$i/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# INTELLIACTIVE

 elif [ $CUR_GOVERNOR = "intelliactive" ]; then
 for i in $FINAL_PATH/intelliactive; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$i/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$i/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then	
		$busybox echo "0" > "$i/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1100000,1100000,1100000,1100000" > "$i/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""


# BIOSHOCK 

 elif [ $CUR_GOVERNOR = "bioshock" ]; then
 for i in $FINAL_PATH/bioshock; do
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "80" > "$i/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""
# LIONFISH 

 elif [ $CUR_GOVERNOR = "lionfish" ]; then
 for i in $FINAL_PATH/lionfish; do
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "80" > "$i/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/jump_level" ]; then
		$busybox echo "1000000" > "$i/jump_level";
	fi
	if [ -e "$GOVERNOR/jump_threshold" ]; then
		$busybox echo "75" > "$i/jump_threshold";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# IMPULSE 

 elif [ $CUR_GOVERNOR = "impulse" ]; then
 for i in $FINAL_PATH/impulse; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/max_freq_hysteresis" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/max_freq_hysteresis";
	fi
	if [ -e "$GOVERNOR/align_windows" ]; then
		$busybox echo "0" > "$i/align_windows";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$i/powersave_bias";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# UBERDEMAND 

 elif [ $CUR_GOVERNOR = "uberdemand" ]; then
 for i in $FINAL_PATH/uberdemand; do
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "47" > "$i/down_differential";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$i/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/second_phase_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/second_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# ELECTROACTIVE 

 elif [ $CUR_GOVERNOR = "electroactive" ]; then
 for i in $FINAL_PATH/electroactive; do
	if [ -e "$GOVERNOR/boostfreq" ]; then
		$busybox echo "0" > "$i/boostfreq";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$i/boostpulse";
	fi
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "47" > "$i/down_differential";
	fi
	if [ -e "$GOVERNOR/freq_responsiveness" ]; then
		$busybox echo "1100000" > "$i/freq_responsiveness";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/micro_freq_up_threshold" ]; then
		$busybox echo "80" > "$i/micro_freq_up_threshold";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$i/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_min_freq" ]; then
		$busybox echo "600000" > "$i/up_threshold_min_freq";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# BARRY_ALLEN

 elif [ $CUR_GOVERNOR = "barry_allen" ]; then
 for i in $FINAL_PATH/barry_allen; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/ba_lock" ]; then
		$busybox echo "0" > "$i/ba_lock";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$i/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$i/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then
		$busybox echo "0" > "$i/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1100000,1100000,1100000,1100000" > "$i/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# BLUACTIVE

 elif [ $CUR_GOVERNOR = "bluactive" ]; then
 for i in $FINAL_PATH/bluactive; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$i/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse" ]; then
		$busybox echo "0" > "$i/boostpulse";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then	
		$busybox echo "0" > "$i/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/two_phase_freq" ]; then
		$busybox echo "1100000,1100000,1100000,1100000" > "$i/two_phase_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# DANCEDANCE

 elif [ $CUR_GOVERNOR = "dancedance" ]; then
 for i in $FINAL_PATH/dancedance; do
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "80" > "$i/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "75000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# LIONHEART 

 elif [ $CUR_GOVERNOR = "lionheart" ]; then
 for i in $FINAL_PATH/lionheart; do
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "80" > "$i/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "75000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# PEGASUSQ

 elif [ $CUR_GOVERNOR = "pegasusq" ]; then
 for i in $FINAL_PATH/pegasusq; do
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "47" > "$i/down_differential";
	fi
	if [ -e "$GOVERNOR/freq_responsiveness" ]; then
		$busybox echo "$700000" > "$i/freq_responsiveness";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_min_freq" ]; then
		$busybox echo "600000" > "$i/up_threshold_min_freq";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# ONDEMAND

 elif [ $CUR_GOVERNOR = "ondemand" ]; then
 for i in $FINAL_PATH/ondemand; do
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "47" > "$i/down_differential";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/optimal_freq" ]; then
		$busybox echo "700000" > "$i/optimal_freq";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$i/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/sync_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$i/up_threshold_any_cpu_load";
	fi
	if [ -e "$GOVERNOR/up_threshold_multi_core" ]; then
		$busybox echo "0" > "$i/up_threshold_multi_core";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# SMARTMAX 

 elif [ $CUR_GOVERNOR = "smartmax" ]; then
 for i in $FINAL_PATH/smartmax; do
	if [ -e "$GOVERNOR/awake_ideal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/awake_ideal_freq";
	fi
	if [ -e "$GOVERNOR/boost_duration" ]; then
		$busybox echo "0" > "$i/boost_duration";
	fi
	if [ -e "$GOVERNOR/boost_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/boost_freq";
	fi
	if [ -e "$GOVERNOR/debug_mask" ]; then
		$busybox echo "32" > "$i/debug_mask";
	fi
	if [ -e "$GOVERNOR/down_rate" ]; then
		$busybox echo "10000" > "$i/down_rate";
	fi
	if [ -e "$GOVERNOR/ignore_nice" ]; then
		$busybox echo "0" > "$i/ignore_nice";
	fi
	if [ -e "$GOVERNOR/input_boost_duration" ]; then
		$busybox echo "0" > "$i/input_boost_duration";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/max_cpu_load" ]; then
		$busybox echo "100" > "$i/max_cpu_load";
	fi
	if [ -e "$GOVERNOR/min_cpu_load" ]; then
		$busybox echo "5" > "$i/min_cpu_load";
	fi
	if [ -e "$GOVERNOR/min_sampling_rate" ]; then
		$busybox echo "20000" > "$i/min_sampling_rate";
	fi
	if [ -e "$GOVERNOR/ramp_down_step" ]; then
		$busybox echo "162000" > "$i/ramp_down_step";
	fi
	if [ -e "$GOVERNOR/ramp_up_during_boost" ]; then
		$busybox echo "0" > "$i/ramp_up_during_boost";
	fi
	if [ -e "$GOVERNOR/ramp_up_step" ]; then
		$busybox echo "100000" > "$i/ramp_up_step";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/suspend_ideal_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/suspend_ideal_freq";
	fi
	if [ -e "$GOVERNOR/touch_poke_freq" ]; then
		$busybox echo "0" > "$i/touch_poke_freq";
	fi
	if [ -e "$GOVERNOR/up_rate" ]; then
		$busybox echo "0" > "$i/up_rate";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# OPTIMAX

 elif [ $CUR_GOVERNOR = "optimax" ]; then
 for i in $FINAL_PATH/optimax; do
	if [ -e "$GOVERNOR/optimal_freq" ]; then
		$busybox echo "1100000" > "$i/optimal_freq";
	fi
	if [ -e "$GOVERNOR/optimal_max_freq" ]; then
		$busybox echo "1500000" > "$i/optimal_max_freq";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$i/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/sync_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "75" > "$i/up_threshold_any_cpu_load";
	fi
	if [ -e "$GOVERNOR/up_threshold_multi_core" ]; then
		$busybox echo "0" > "$i/up_threshold_multi_core";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# CONSERVATIVEX

 elif [ $CUR_GOVERNOR = "conservativex" ]; then
 for i in $FINAL_PATH/conservativex; do
	if [ -e "$GOVERNOR/down_threshold" ]; then
		$busybox echo "80" > "$i/down_threshold";
	fi
	if [ -e "$GOVERNOR/freq_step" ]; then
		$busybox echo "15" > "$i/freq_step";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "1" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "75000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# INTERACTIVE_PRO

 elif [ $CUR_GOVERNOR = "interactive_pro" ]; then
 for i in $FINAL_PATH/interactive_pro; do
	if [ -e "$GOVERNOR/above_hispeed_delay" ]; then
		$busybox echo "0" > "$i/above_hispeed_delay";
	fi
	if [ -e "$GOVERNOR/boost" ]; then
		$busybox echo "0" > "$i/boost";
	fi
	if [ -e "$GOVERNOR/boostpulse_duration" ]; then
		$busybox echo "0" > "$i/boostpulse_duration";
	fi
	if [ -e "$GOVERNOR/freq_calc_thresh" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/freq_calc_thresh";
	fi
	if [ -e "$GOVERNOR/go_hispeed_load" ]; then
		$busybox echo "100" > "$i/go_hispeed_load";
	fi
	if [ -e "$GOVERNOR/hispeed_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/hispeed_freq";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/min_sample_time" ]; then
		$busybox echo "80000" > "$i/min_sample_time";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sync_freq" ]; then
		$busybox echo "$MIN_CPU_FREQ" > "$i/sync_freq";
	fi
	if [ -e "$GOVERNOR/target_loads" ]; then
<<<<<<< HEAD
		$busybox echo "0 $MIN_CPU_FREQ:50 400000:29 600000:42 700000:43 800000:51 900000:54 1100000:65 1400000:76 1700000:88 1900000:95" > "$i/target_loads";
=======
		$busybox echo "1 $MIN_CPU_FREQ:32 400000:34 600000:40 700000:44 800000:49 900000:55 1100000:64 1400000:79 1700000:90 1900000:99" > "$i/target_loads";
>>>>>>> origin/master
	fi
	if [ -e "$GOVERNOR/timer_rate" ]; then
		$busybox echo "60000" > "$i/timer_rate";
	fi
	if [ -e "$GOVERNOR/timer_slack" ]; then
		$busybox echo "-1" > "$i/timer_slack";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_freq" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# WHEATLEY

 elif [ $CUR_GOVERNOR = "wheatley" ]; then
 for i in $FINAL_PATH/wheatley; do
	if [ -e "$GOVERNOR/allowed_misses" ]; then
		$busybox echo "5" > "$i/allowed_misses";
	fi
	if [ -e "$GOVERNOR/ignore_nice_load" ]; then
		$busybox echo "0" > "$i/ignore_nice_load";
	fi
	if [ -e "$GOVERNOR/io_is_busy" ]; then
		$busybox echo "1" > "$i/io_is_busy";
	fi
	if [ -e "$GOVERNOR/powersave_bias" ]; then
		$busybox echo "0" > "$i/powersave_bias";
	fi
	if [ -e "$GOVERNOR/sampling_down_factor" ]; then
		$busybox echo "1" > "$i/sampling_down_factor";
	fi
	if [ -e "$GOVERNOR/sampling_rate" ]; then
		$busybox echo "60000" > "$i/sampling_rate";
	fi
	if [ -e "$GOVERNOR/sampling_rate_min" ]; then
		$busybox echo "30000" > "$i/sampling_rate_min";
	fi
	if [ -e "$GOVERNOR/target_residency" ]; then
		$busybox echo "10000" > "$i/target_residency";
	fi
	if [ -e "$GOVERNOR/up_threshold" ]; then
		$busybox echo "75" > "$i/up_threshold";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
  $busybox echo ""

# ONDEMAND PLUS

 elif [ $CUR_GOVERNOR = "ondemandplus" ]; then
 for i in $FINAL_PATH/ondemandplus; do
	if [ -e "$GOVERNOR/down_differential" ]; then
		$busybox echo "47" > "$i/down_differpu_freq";
	fi
	if [ -e "$GOVERNOR/up_threshold_any_cpu_load" ]; then
		$busybox echo "0" > "$i/up_threshold_any_cpu_load";
	fi
 done
	$busybox echo "Balanced $CUR_GOVERNOR tweaks applied."
    $busybox echo ""
 else 
 echo "$CUR_GOVERNOR governor is not compatible. Please, change it to a compatible governor."
 echo "        You can know the compatible governors checking the XDA thread."
 echo ""
 fi
 sleep 180
fi
done